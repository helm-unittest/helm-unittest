suite: test ingress
templates:
  - templates/ingress.yaml
tests:
  - it: should fail render ingress if enabled and externalPort not filled
    set:
      ingress.enabled: true
      service.externalPort: ""
    asserts:
      - failedTemplate:
          errorMessage: The externalPort is required

  - it: should render Ingress right if enabled
    set:
      ingress.enabled: true
      service.externalPort: 12345
    release:
      name: my-release
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - contains:
          path: spec.rules[0].http.paths
          content:
            path: /
            backend:
              serviceName: my-release-basic
              servicePort: 12345
      - notExists:
          path: spec.tls
      - containsDocument:
          kind: Ingress
          apiVersion: extensions/v1beta1
      - notFailedTemplate: {}

  - it: should set annotations if given
    set:
      ingress.enabled: true
      ingress.annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        ingress.kubernetes.io/rewrite-target: /
    asserts:
      - equal:
          path: metadata.annotations
          value:
            kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: "true"
            ingress.kubernetes.io/rewrite-target: /

  - it: should set annotations if given and verify the specific values.
    set:
      ingress.enabled: true
      ingress.annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        ingress.kubernetes.io/rewrite-target: /
    asserts:
      - equal:
          path: metadata.annotations["kubernetes.io/ingress.class"]
          value: nginx
      - equal:
          path: metadata.annotations["kubernetes.io/tls-acme"]
          value: "true"
      - equal:
          path: metadata.annotations["ingress.kubernetes.io/rewrite-target"]
          value: /

  - it: should set annotations if given and verify the existence.
    set:
      ingress.enabled: true
      ingress.annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        ingress.kubernetes.io/rewrite-target: /
    asserts:
      - exists:
          path: metadata.annotations["kubernetes.io/ingress.class"]
      - isNotNullOrEmpty:
          path: metadata.annotations["kubernetes.io/tls-acme"]
      - notExists:
          path: metadata.annotations["ingress.kubernetes.io/cookie-name"]

  - it: should set tls if given
    set:
      ingress.enabled: true
      ingress.tls:
        - secretName: my-tls-secret
    asserts:
      - equal:
          path: spec.tls
          value:
            - secretName: my-tls-secret

  - it: should render nothing if not enabled
    asserts:
      - containsDocument:
          kind: Ingress
          apiVersion: extensions/v1beta1
        not: true
      - hasDocuments:
          count: 0
      - matchSnapshot: {}
