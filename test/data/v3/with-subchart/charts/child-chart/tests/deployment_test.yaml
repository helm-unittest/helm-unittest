suite: test deployment
templates:
  - templates/deployment.yaml
values:
  - ./values/image.yaml
tests:
  - it: should pass all kinds of assertion
    set:
      service.internalPort: 8080
    asserts:
      - equal:
          path: metadata.namespace
          value: "region1"
      - equal:
          path: spec.template.spec.containers[0].image
          value: apache:latest
      - notEqual:
          path: spec.template.spec.containers[0].image
          value: nginx:stable
      - matchRegex:
          path: metadata.name
          pattern: ^.*-child-chart$
      - notMatchRegex:
          path: metadata.name
          pattern: ^.*-foobar$
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 8080
      - notContains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 80
      - notExists:
          path: spec.template.nodeSelector
      - exists:
          path: spec.template
      - isNullOrEmpty:
          path: spec.template.spec.containers[0].resources
      - isNotNullOrEmpty:
          path: spec.template.spec.containers[0]
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: extensions/v1beta1
      - hasDocuments:
          count: 1
      - matchSnapshot:
          path: spec
  - it: should have seccompProfile configured for container
    values:
      - ./values/seccomp.yaml
    asserts:
      - exists:
          path: spec.template.spec.containers[?(@.name=='child-chart-nginx')].securityContext.seccompProfile
      - exists:
          path: spec.template.spec.containers[?(@.name=='child-chart-nginx')].securityContext.capabilities.drop
      - equal:
          path: spec.template.spec.containers[?(@.name=='child-chart-nginx')].securityContext.seccompProfile.localhostProfile
          value: nginxProfileCustomized
