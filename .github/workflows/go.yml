name: 'Go Build and Tests'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY_IMAGE: helmunittest/helm-unittest
  GO_VERSION: 1.23.x

permissions:
  contents: read
      
jobs:
  full-test:
    name: Full SDK and Tools Test
    permissions:
      # Needed to upload the results to github dashboard.
      checks: write
      issues: write
      pull-requests: write      
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # tests for target OS
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      # https://github.com/actions/checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Setup Go
      # https://github.com/actions/setup-go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: ${{ env.GO_VERSION }}

    # Make results directory
    - name: Install JUnit plugin for uploading testresults
      run: |
        mkdir -p test-results

    # Install using go install
    - name: Install JUnit plugin for uploading testresults
      run: |
        go install github.com/jstemmer/go-junit-report/v2@14d61e6e75e3f3c74551d757ad936e8e88014464 # v2.1.0

    # Run tests with nice formatting. Save the coverage and junit test results in test-results
    - name: Run tests
      run: |
        go test ./... -coverprofile=test-results/coverage -v -covermode=atomic 2>&1 | go-junit-report -set-exit-code > test-results/go-test-report.xml

    - name: SonarCloud Scan
      # https://github.com/sonarsource/sonarcloud-github-action
      uses: sonarsource/sonarcloud-github-action@eb211723266fe8e83102bac7361f0a05c3ac1d1b # v3.0.0
      if: matrix.os == 'ubuntu-latest' && env.SONAR_TOKEN != ''
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Upload the original go test log as an artifact for later review.
    - name: Upload Testlog
      # https://github.com/EnricoMi/publish-unit-test-result-action
      uses: EnricoMi/publish-unit-test-result-action@82082dac68ad6a19d980f8ce817e108b9f496c2a # v2.17.1
      if: always() && matrix.os == 'ubuntu-latest'
      with:
        files: |
          test-results/go-test-report.xml

  validate_docker:
    name: Build and Test Docker
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to ensure the job is executed.
      statuses: write
    runs-on: ubuntu-latest
    needs:
      - full-test
    steps:
    - name: Checkout
      # https://github.com/actions/checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 1

    - name: Setup go
      # https://github.com/actions/setup-go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: ${{ env.GO_VERSION }}

    # Run docker-tests
    - name: Build docker-test
      run: |
        make test-docker

    - name: Retrieve versions
      run: |
        helmPluginVersion=$(sed -n -e 's/version:[ "]*\([^"]*\).*/\1/p' plugin.yaml)
        echo "HELM_PLUGIN_VERSION=${helmPluginVersion}" >> $GITHUB_ENV

    # Run trivy security
    - name: Run Trivy vulnerability scanner
      # https://github.com/aquasecurity/trivy-action
      uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # 0.24.0
      with:        
        image-ref: ${{ env.REGISTRY_IMAGE }}:${{ env.HELM_PLUGIN_VERSION }}
        format: sarif
        output: trivy-results.sarif
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@8214744c546c1e5c8f03dde8fab3a7353211988d # v3.26.7
      if: always()
      with:
        sarif_file: trivy-results.sarif
        
